-- DROP TABLE GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD;

-- The number values '_NUM' are stored for debugging
-- and error checking purposes

CREATE TABLE GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
(
        BLOCK_GROUP INTEGER NOT NULL,
        DESCRIPTION VARCHAR2(100) NOT NULL,
        MEDIAN_BLOCK_INCOME_NUM  NUMBER(32) NOT NULL ,
        MEDIAN_BLOCK_INCOME_CD VARCHAR2(50),
        WHITE_NUM NUMBER(32) NOT NULL,
        WHITE_CD VARCHAR2(50),
        BLACK_NUM NUMBER(32) NOT NULL,
        BLACK_CD VARCHAR2(50),
        AMER_IND_ALASKA_NATIVE_NUM NUMBER(32) NOT NULL,
        AMER_IND_ALASKA_NATIVE_CD VARCHAR2(50),
        ASIANS_NUM NUMBER(32) NOT NULL,
        ASIANS_CD VARCHAR2(50),
        NATIVE_HI_PAC_ISLANDER_NUM NUMBER(32) NOT NULL,
        NATIVE_HI_PAC_ISLANDER_CD VARCHAR2(50),
        OTHER_NUM NUMBER(32) NOT NULL,
        OTHER_CD VARCHAR2(50),
        TWO_OR_MORE_RACES_NUM NUMBER(32) NOT NULL,
        TWO_OR_MORE_RACES_CD VARCHAR2(50),
        WHITE_NON_HISPANIC_NUM NUMBER(32) NOT NULL,
        WHITE_NON_HISPANIC_CD VARCHAR2(50),
        HISPANIC_NUM NUMBER(32) NOT NULL,
        HISPANIC_CD VARCHAR2(50)
);

CREATE INDEX
    GEOCENSUS.BLOCK_GROUP
ON
    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
    (
        BLOCK_GROUP
    );




-- If the race/ethnic based median income is = '.'
-- then use the MEDIAN_BLOCK_INCOME for that block
-- as a proxy for the race/ethnic median income.
-- If both the race/ethnic based median income and 
-- MEDIAN_BLOCK_INCOME are equal to '.' then 
-- set the race/ethic based income to -1
INSERT INTO GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SELECT  TO_NUMBER(SUBSTR(BLOCK_GROUP,8)) AS BLOCK_GROUP,   --15000US480157605022
        DESCRIPTION,
        CASE 
           WHEN UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END MEDIAN_BLOCK_INCOME_NUM,
        NULL AS MEDIAN_BLOCK_INCOME_CD,
        
        CASE 
           WHEN UHE001 != '.' THEN TO_NUMBER(UHE001) 
           WHEN UHE001  = '.' AND  UHD001 != '.' THEN TO_NUMBER(UHD001) 
           ELSE -1
        END WHITE_NUM,
        NULL AS WHITE_CD,
        
        CASE 
           WHEN UHF001 != '.' THEN TO_NUMBER(UHF001)
           WHEN UHF001 = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END BLACK_NUM,
        NULL AS BLACK_CD,
        
        CASE 
           WHEN UHG001 != '.' THEN TO_NUMBER(UHG001)
           WHEN UHG001  = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END AMER_IND_ALASKA_NATIVE_NUM,
        NULL AS AMER_IND_ALASKA_NATIVE_CD,
        
        CASE 
           WHEN UHH001 != '.' THEN TO_NUMBER(UHH001)
           WHEN UHH001  = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END ASIANS_NUM,
        NULL AS ASIANS_CD,
        
        CASE 
           WHEN UHI001 != '.' THEN TO_NUMBER(UHI001)
           WHEN UHI001  = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END NATIVE_HI_PAC_ISLANDER_NUM,
        NULL AS NATIVE_HI_PAC_ISLANDER_CD,
        
        CASE 
           WHEN UHJ001 != '.' THEN TO_NUMBER(UHJ001)
           WHEN UHJ001  = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END OTHER_NUM,
        NULL AS OTHER_CD,
        
        CASE 
           WHEN UHK001 != '.' THEN TO_NUMBER(UHK001)
           WHEN UHK001  = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END TWO_OR_MORE_RACES_NUM,
        NULL AS TWO_OR_MORE_RACES_CD,
        
        CASE 
           WHEN UHL001 != '.' THEN TO_NUMBER(UHL001)
           WHEN UHL001  = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END WHITE_NON_HISPANIC_NUM,
        NULL AS WHITE_NON_HISPANIC_CD,
        
        CASE 
           WHEN UHM001 != '.' THEN TO_NUMBER(UHM001)
           WHEN UHM001  = '.' AND UHD001 != '.' THEN TO_NUMBER(UHD001)
           ELSE -1
        END HISPANIC_NUM,
        NULL AS HISPANIC_CD
        
FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME
;


-- 108 rows have MEDIAN_BLOCK_INCOME = '.'
-- therefore race based median income could
-- still be = '.'

UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     MEDIAN_BLOCK_INCOME_CD = 'INCOME:UNKOWN'
WHERE   MEDIAN_BLOCK_INCOME_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     WHITE_CD = 'INCOME:UNKOWN'
WHERE   WHITE_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     BLACK_CD = 'INCOME:UNKOWN'
WHERE   BLACK_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     AMER_IND_ALASKA_NATIVE_CD = 'INCOME:UNKOWN'
WHERE   AMER_IND_ALASKA_NATIVE_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     ASIANS_CD = 'INCOME:UNKOWN'
WHERE   ASIANS_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     NATIVE_HI_PAC_ISLANDER_CD = 'INCOME:UNKOWN'
WHERE   NATIVE_HI_PAC_ISLANDER_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     OTHER_CD = 'INCOME:UNKOWN'
WHERE   OTHER_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     TWO_OR_MORE_RACES_CD = 'INCOME:UNKOWN'
WHERE   TWO_OR_MORE_RACES_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     WHITE_NON_HISPANIC_CD = 'INCOME:UNKOWN'
WHERE   WHITE_NON_HISPANIC_NUM = -1
;
UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
SET     HISPANIC_CD = 'INCOME:UNKOWN'
WHERE   HISPANIC_NUM = -1
;


-- Round income to 5000 income range steps and set CONCEPT_CD for
-- each race/ethnic classification


UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     MEDIAN_BLOCK_INCOME_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(MEDIAN_BLOCK_INCOME_NUM/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   MEDIAN_BLOCK_INCOME_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   MEDIAN_BLOCK_INCOME_NUM > -1
;


UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     WHITE_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(WHITE_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   WHITE_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   WHITE_NUM > -1
;

UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     BLACK_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(BLACK_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   BLACK_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   BLACK_NUM > -1
;


UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     AMER_IND_ALASKA_NATIVE_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(AMER_IND_ALASKA_NATIVE_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   AMER_IND_ALASKA_NATIVE_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   AMER_IND_ALASKA_NATIVE_NUM > -1
;


UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     ASIANS_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(ASIANS_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   ASIANS_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   ASIANS_NUM > -1
;


UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     NATIVE_HI_PAC_ISLANDER_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(NATIVE_HI_PAC_ISLANDER_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   NATIVE_HI_PAC_ISLANDER_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   NATIVE_HI_PAC_ISLANDER_NUM > -1
;


UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     OTHER_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(OTHER_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   OTHER_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   OTHER_NUM > -1
;



UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     TWO_OR_MORE_RACES_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(TWO_OR_MORE_RACES_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   TWO_OR_MORE_RACES_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   TWO_OR_MORE_RACES_NUM > -1
;



UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     WHITE_NON_HISPANIC_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(WHITE_NON_HISPANIC_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   WHITE_NON_HISPANIC_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   WHITE_NON_HISPANIC_NUM > -1
;


UPDATE  GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD A
SET     HISPANIC_CD = 
(
SELECT  CASE 
           WHEN ROUNDED_INCOME < 10000 THEN 'INCOME:<10K'
           WHEN ROUNDED_INCOME = 10000 THEN 'INCOME:10-15K'
           WHEN ROUNDED_INCOME = 15000 THEN 'INCOME:15-20K'
           WHEN ROUNDED_INCOME = 20000 THEN 'INCOME:20-25K'
           WHEN ROUNDED_INCOME = 25000 THEN 'INCOME:25-30K'
           WHEN ROUNDED_INCOME = 30000 THEN 'INCOME:30-35K'
           WHEN ROUNDED_INCOME = 35000 THEN 'INCOME:35-40K'
           WHEN ROUNDED_INCOME = 40000 THEN 'INCOME:40-45K'
           WHEN ROUNDED_INCOME = 45000 THEN 'INCOME:45-50K'
           WHEN ROUNDED_INCOME = 50000 THEN 'INCOME:50-55K'
           WHEN ROUNDED_INCOME = 55000 THEN 'INCOME:55-60K'
           WHEN ROUNDED_INCOME = 60000 THEN 'INCOME:60-65K'
           WHEN ROUNDED_INCOME = 65000 THEN 'INCOME:65-70K'
           WHEN ROUNDED_INCOME = 70000 THEN 'INCOME:70-75K'
           WHEN ROUNDED_INCOME = 75000 THEN 'INCOME:75-80K'
           WHEN ROUNDED_INCOME = 80000 THEN 'INCOME:80-85K'
           WHEN ROUNDED_INCOME = 85000 THEN 'INCOME:85-90K'
           WHEN ROUNDED_INCOME = 90000 THEN 'INCOME:90-95K'
           WHEN ROUNDED_INCOME = 95000 THEN 'INCOME:95-100K'
           WHEN ROUNDED_INCOME >= 100000 THEN 'INCOME:>100K'
           ELSE 'INCOME:ERROR ' || TO_CHAR(ROUNDED_INCOME)
        END AS CONCEPT_CD
FROM    (
          SELECT  FLOOR(TO_NUMBER(HISPANIC_NUM)/5000) * 5000  AS ROUNDED_INCOME
          FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD B
          WHERE   HISPANIC_NUM > -1
          AND     A.BLOCK_GROUP = B.BLOCK_GROUP
        )

)
WHERE   HISPANIC_NUM > -1
;

-- Data check
/*
SELECT  *
FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
;
SELECT  *
FROM    GEOCENSUS.BLOCK_GROUP_TO_INCOME_CD
WHERE   MEDIAN_BLOCK_INCOME_CD    LIKE 'INCOME:ERROR%' OR
        WHITE_CD                  LIKE 'INCOME:ERROR%' OR
        BLACK_CD                  LIKE 'INCOME:ERROR%' OR
        AMER_IND_ALASKA_NATIVE_CD LIKE 'INCOME:ERROR%' OR
        ASIANS_CD                 LIKE 'INCOME:ERROR%' OR
        NATIVE_HI_PAC_ISLANDER_CD LIKE 'INCOME:ERROR%' OR
        OTHER_CD                  LIKE 'INCOME:ERROR%' OR
        TWO_OR_MORE_RACES_CD      LIKE 'INCOME:ERROR%' OR
        WHITE_NON_HISPANIC_CD     LIKE 'INCOME:ERROR%' OR
        HISPANIC_CD               LIKE 'INCOME:ERROR%' OR
        MEDIAN_BLOCK_INCOME_CD    IS NULL OR
        WHITE_CD                  IS NULL OR
        BLACK_CD                  IS NULL OR
        AMER_IND_ALASKA_NATIVE_CD IS NULL OR
        ASIANS_CD                 IS NULL OR
        NATIVE_HI_PAC_ISLANDER_CD IS NULL OR
        OTHER_CD                  IS NULL OR
        TWO_OR_MORE_RACES_CD      IS NULL OR
        WHITE_NON_HISPANIC_CD     IS NULL OR
        HISPANIC_CD               IS NULL
*/